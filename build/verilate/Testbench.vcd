$version Generated by VerilatedVcd $end
$timescale 10ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module Testbench $end
  $var wire 32 3 BASE [31:0] $end
  $var wire 32 4 INITIAL [31:0] $end
  $var wire 1 2 clk $end
  $var wire 1 # rstn $end
  $var wire 1 $ high_rst $end
  $var wire 1 % low_co $end
  $var wire 1 ) co $end
  $var wire 8 - cnt [7:0] $end
  $var wire 1 . error $end
  $scope module cnt_24 $end
   $var wire 32 3 BASE [31:0] $end
   $var wire 32 4 INITIAL [31:0] $end
   $var wire 1 5 en $end
   $var wire 1 2 clk $end
   $var wire 1 # rstn $end
   $var wire 1 $ high_rst $end
   $var wire 1 % low_co $end
   $var wire 1 ) co $end
   $var wire 8 - cnt [7:0] $end
   $var wire 32 6 HIGH_BASE [31:0] $end
   $var wire 32 6 LOW_BASE [31:0] $end
   $var wire 32 7 HIGH_INIT [31:0] $end
   $var wire 32 8 LOW_INIT [31:0] $end
   $var wire 32 9 HIGH_CO [31:0] $end
   $var wire 32 : LOW_CO [31:0] $end
   $var wire 1 * low_bits_carry $end
   $var wire 1 ) global_temp_co $end
   $var wire 4 / low_bits [3:0] $end
   $var wire 4 0 high_bits [3:0] $end
   $scope module HIGH_CNT $end
    $var wire 32 6 BASE [31:0] $end
    $var wire 32 7 INITIAL [31:0] $end
    $var wire 1 5 en $end
    $var wire 1 2 clk $end
    $var wire 1 # rstn $end
    $var wire 1 * low_co $end
    $var wire 1 $ high_rst $end
    $var wire 1 + co $end
    $var wire 4 0 cnt [3:0] $end
    $var wire 1 + temp_co $end
   $upscope $end
   $scope module LOW_CNT $end
    $var wire 32 6 BASE [31:0] $end
    $var wire 32 8 INITIAL [31:0] $end
    $var wire 1 5 en $end
    $var wire 1 2 clk $end
    $var wire 1 # rstn $end
    $var wire 1 % low_co $end
    $var wire 1 $ high_rst $end
    $var wire 1 * co $end
    $var wire 4 / cnt [3:0] $end
    $var wire 1 * temp_co $end
   $upscope $end
  $upscope $end
  $scope module judge $end
   $var wire 32 3 BASE [31:0] $end
   $var wire 32 4 INITIAL [31:0] $end
   $var wire 1 2 clk $end
   $var wire 1 # rstn $end
   $var wire 1 $ high_rst $end
   $var wire 1 % low_co $end
   $var wire 1 ) co $end
   $var wire 8 - cnt [7:0] $end
   $var wire 1 . error $end
   $var wire 32 & param_rstn [31:0] $end
   $var wire 32 ' param_high_rst [31:0] $end
   $var wire 32 ( param_low_co [31:0] $end
   $var wire 32 , param_co [31:0] $end
   $var wire 32 1 param_cnt [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
1%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000001 (
0)
0*
0+
b00000000000000000000000000000000 ,
b00000000 -
0.
b0000 /
b0000 0
b00000000000000000000000000000000 1
02
b00000000000000000000000000011000 3
b00000000000000000000000000010000 4
15
b00000000000000000000000000001010 6
b00000000000000000000000000000001 7
b00000000000000000000000000000110 8
b00000000000000000000000000000010 9
b00000000000000000000000000000011 :
#500
b00010110 -
b0110 /
b0001 0
b00000000000000000000000000010110 1
12
#1000
02
#1500
12
#2000
1#
b00000000000000000000000000000001 &
02
#2500
b00010111 -
b0111 /
b00000000000000000000000000010111 1
12
#3000
02
#3500
b00011000 -
b1000 /
b00000000000000000000000000011000 1
12
#4000
02
#4500
b00011001 -
b1001 /
b00000000000000000000000000011001 1
12
#5000
02
#5500
1*
b00010000 -
b0000 /
b00000000000000000000000000010000 1
12
#6000
02
#6500
0*
b00100001 -
1.
b0001 /
b0010 0
b00000000000000000000000000100001 1
12
#7000
02
